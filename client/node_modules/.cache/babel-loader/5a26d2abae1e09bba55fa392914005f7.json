{"ast":null,"code":"var _jsxFileName = \"/Users/changrendu/Documents/Andrei_Web_Developer/E-commerce_project/Dylan/e-commerce-clothing/src/pages/shop/shop.component.jsx\";\nimport React, { Component } from \"react\";\nimport CollectionOverveiw from \"../../components/collection-overview/collection-overview.component\";\nimport { Route } from 'react-router-dom';\nimport CollectionPage from \"../collection/collection.component\";\nimport { convertCollectionsSnapshotToMap, firestore } from '../../firebase/firebase.utils';\nimport { connect } from 'react-redux';\nimport { fetchCollectionsStartAsync, updateCollections } from \"../../redux/shop/shop.actions\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nimport { selectIsCollectionFetching } from \"../../redux/shop/shop.selector\";\nimport { createStructuredSelector } from \"reselect\";\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionOverveiw);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends Component {\n  // state = {\n  //     loading: true\n  // };\n  //\n  // unsubscribeFromSnapshot = null;\n  componentDidMount() {// const {updateCollections} = this.props\n    // const collectionRef = firestore.collection('collections');\n    //\n    // collectionRef.get().then(snapshot => {\n    //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    //     updateCollections(collectionsMap)\n    //     // console.log(collectionsMap)\n    //     this.setState({loading: false})\n    // })\n  }\n\n  render() {\n    const {\n      match\n    } = this.props; // const {loading} = this.state;\n\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: `${match.path}/:collectionId`,\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }));\n  }\n\n}\n\n;\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n  // updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))         // no need this line anymore\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/changrendu/Documents/Andrei_Web_Developer/E-commerce_project/Dylan/e-commerce-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Component","CollectionOverveiw","Route","CollectionPage","convertCollectionsSnapshotToMap","firestore","connect","fetchCollectionsStartAsync","updateCollections","WithSpinner","selectIsCollectionFetching","createStructuredSelector","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","componentDidMount","render","match","props","path","loading","mapStateToProps","isCollectionFetching","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,kBAAP,MAA+B,oEAA/B;AAEA,SAAQC,KAAR,QAAoB,kBAApB;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAAQC,+BAAR,EAAyCC,SAAzC,QAAyD,+BAAzD;AAEA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,0BAAR,EAAoCC,iBAApC,QAA4D,+BAA5D;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AACA,SAAQC,0BAAR,QAAyC,gCAAzC;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AAEA,MAAMC,8BAA8B,GAAGH,WAAW,CAACR,kBAAD,CAAlD;AACA,MAAMY,yBAAyB,GAAGJ,WAAW,CAACN,cAAD,CAA7C;;AAEA,MAAMW,QAAN,SAAuBd,SAAvB,CAAiC;AAE7B;AACA;AACA;AACA;AACA;AAEAe,EAAAA,iBAAiB,GAAG,CAMhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA;AAAD,QAAU,KAAKC,KAArB,CADK,CAEL;;AACA,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAED,KAAK,CAACE,IAAK,EAAjC;AACO,MAAA,MAAM,EAAED,KAAK,IACT,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEE;AAA3C,SAAwDF,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAMI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAED,KAAK,CAACE,IAAK,gBAAjC;AACO,MAAA,MAAM,EAAED,KAAK,IACT,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEE;AAAtC,SAAmDF,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADJ;AAcH;;AA1C4B;;AA2ChC;AAED,MAAMG,eAAe,GAAGV,wBAAwB,CAAC;AAC7CW,EAAAA,oBAAoB,EAAEZ;AADuB,CAAD,CAAhD;;AAIA,MAAMa,kBAAkB,GAAGC,QAAQ,KAAK;AACpC;AACDjB,EAAAA,0BAA0B,EAAE,MAAMiB,QAAQ,CAACjB,0BAA0B,EAA3B;AAFL,CAAL,CAAnC;;AAKA,eAAeD,OAAO,CAAC,IAAD,EAAOiB,kBAAP,CAAP,CAAkCT,QAAlC,CAAf","sourcesContent":["import React, {Component} from \"react\";\nimport CollectionOverveiw from \"../../components/collection-overview/collection-overview.component\";\n\nimport {Route} from 'react-router-dom';\nimport CollectionPage from \"../collection/collection.component\";\nimport {convertCollectionsSnapshotToMap, firestore} from '../../firebase/firebase.utils';\n\nimport {connect} from 'react-redux'\nimport {fetchCollectionsStartAsync, updateCollections} from \"../../redux/shop/shop.actions\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nimport {selectIsCollectionFetching} from \"../../redux/shop/shop.selector\";\nimport {createStructuredSelector} from \"reselect\";\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionOverveiw);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage)\n\nclass ShopPage extends Component {\n\n    // state = {\n    //     loading: true\n    // };\n    //\n    // unsubscribeFromSnapshot = null;\n\n    componentDidMount() {\n\n\n\n\n\n        // const {updateCollections} = this.props\n        // const collectionRef = firestore.collection('collections');\n        //\n        // collectionRef.get().then(snapshot => {\n        //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n        //     updateCollections(collectionsMap)\n        //     // console.log(collectionsMap)\n        //     this.setState({loading: false})\n        // })\n    }\n\n    render() {\n        const {match} = this.props;\n        // const {loading} = this.state;\n        return (\n            <div className='shop-page'>\n                <Route exact path={`${match.path}`}\n                       render={props =>\n                           <CollectionsOverviewWithSpinner isLoading={loading} {...props} />\n                       }\n                />\n                <Route exact path={`${match.path}/:collectionId`}\n                       render={props =>\n                           <CollectionPageWithSpinner isLoading={loading} {...props} />\n                       }\n                />\n            </div>\n        )\n    }\n};\n\nconst mapStateToProps = createStructuredSelector({\n    isCollectionFetching: selectIsCollectionFetching\n})\n\nconst mapDispatchToProps = dispatch => ({\n    // updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))         // no need this line anymore\n   fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage)\n"]},"metadata":{},"sourceType":"module"}