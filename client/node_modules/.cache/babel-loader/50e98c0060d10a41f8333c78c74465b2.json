{"ast":null,"code":"import ShopActionTypes from \"./shop.types\";\nimport { convertCollectionsSnapshotToMap, firestore } from \"../../firebase/firebase.utils\";\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap); // console.log(collectionsMap)\n\n      this.setState({\n        loading: false\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/changrendu/Documents/Andrei_Web_Developer/E-commerce_project/Dylan/e-commerce-clothing/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","convertCollectionsSnapshotToMap","firestore","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","collectionsMap","updateCollections","setState","loading"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAAQC,+BAAR,EAAyCC,SAAzC,QAAyD,+BAAzD;AAGA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AACxCC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADkB,CAAP,CAA9B;AAIP,OAAO,MAAMC,0BAA0B,GAAG,MAAM;AAC5C,SAAOC,QAAQ,IAAI;AACf,UAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AAEAD,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACjC,YAAMC,cAAc,GAAGZ,+BAA+B,CAACW,QAAD,CAAtD;AACAE,MAAAA,iBAAiB,CAACD,cAAD,CAAjB,CAFiC,CAGjC;;AACA,WAAKE,QAAL,CAAc;AAACC,QAAAA,OAAO,EAAE;AAAV,OAAd;AACH,KALD;AAMH,GATD;AAUH,CAXM","sourcesContent":["import ShopActionTypes from \"./shop.types\";\nimport {convertCollectionsSnapshotToMap, firestore} from \"../../firebase/firebase.utils\";\n\n\nexport const fetchCollectionsStart = () => ({\n    type: ShopActionTypes.FETCH_COLLECTIONS_START,\n});\n\nexport const fetchCollectionsStartAsync = () => {\n    return dispatch => {\n        const collectionRef = firestore.collection('collections');\n\n        collectionRef.get().then(snapshot => {\n            const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n            updateCollections(collectionsMap)\n            // console.log(collectionsMap)\n            this.setState({loading: false})\n        })\n    }\n}\n"]},"metadata":{},"sourceType":"module"}