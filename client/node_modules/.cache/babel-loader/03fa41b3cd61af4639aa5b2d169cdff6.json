{"ast":null,"code":"var _jsxFileName = \"/Users/changrendu/Documents/Andrei_Web_Developer/E-commerce_project/Dylan/e-commerce-clothing/client/src/components/collection-item/collection-item.component.jsx\";\nimport React from \"react\";\nimport './collection-item.styles.scss';\nimport CustomButton from \"../custom-button/custom-buttom.component\";\nimport { connect } from 'react-redux';\nimport { addCartItem } from '../../redux/cart/cart.actions';\n/* Below codes, because we need item and item's element like name, price and imageUrl, so we have to pass the whole item\n    from upper component: collection-preview (item={item}); then we instead using \"()\" after \"=>\", but using \"{}\" ,\n    so that we can write return() function. Also, we need the item's elements, we can destructor the item;\n    Finally, we adding onClick = {()=> addCartItem(item)} to update the store by using redux:\n*/\n\nconst CollectionItem = ({\n  item,\n  addCartItem\n}) => {\n  const {\n    name,\n    price,\n    imageUrl\n  } = item;\n  return React.createElement(\"div\", {\n    className: \"collection-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"image\",\n    style: {\n      backgroundImage: `url(${imageUrl})`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"collection-footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, name), React.createElement(\"span\", {\n    className: \"price\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, price)), React.createElement(CustomButton, {\n    onClick: () => addCartItem(item),\n    inverted: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \" Add to cart \"));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  addCartItem: item => dispatch(addCartItem(item))\n});\n\nexport default connect(null, mapDispatchToProps)(CollectionItem);","map":{"version":3,"sources":["/Users/changrendu/Documents/Andrei_Web_Developer/E-commerce_project/Dylan/e-commerce-clothing/client/src/components/collection-item/collection-item.component.jsx"],"names":["React","CustomButton","connect","addCartItem","CollectionItem","item","name","price","imageUrl","backgroundImage","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,+BAAP;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,WAAR,QAA0B,+BAA1B;AAEA;;;;;;AAKA,MAAMC,cAAc,GAAE,CAAC;AAACC,EAAAA,IAAD;AAAOF,EAAAA;AAAP,CAAD,KAA0B;AAC5C,QAAM;AAACG,IAAAA,IAAD;AAAOC,IAAAA,KAAP;AAAcC,IAAAA;AAAd,MAA0BH,IAAhC;AACA,SACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,OAAf;AACK,IAAA,KAAK,EAAE;AACHI,MAAAA,eAAe,EAAG,OAAMD,QAAS;AAD9B,KADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAMI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBF,IAAxB,CADJ,EAEI;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBC,KAAzB,CAFJ,CANJ,EAUI,oBAAC,YAAD;AACI,IAAA,OAAO,EAAE,MAAKJ,WAAW,CAACE,IAAD,CAD7B;AAEI,IAAA,QAAQ,MAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAVJ,CADJ;AAgBH,CAlBD;;AAoBA,MAAMK,kBAAkB,GAAGC,QAAQ,KAAK;AACpCR,EAAAA,WAAW,EAAEE,IAAI,IAAIM,QAAQ,CAACR,WAAW,CAACE,IAAD,CAAZ;AADO,CAAL,CAAnC;;AAIA,eAAeH,OAAO,CAAC,IAAD,EAAMQ,kBAAN,CAAP,CAAkCN,cAAlC,CAAf","sourcesContent":["import React from \"react\";\nimport './collection-item.styles.scss'\nimport CustomButton from \"../custom-button/custom-buttom.component\";\n\nimport { connect } from 'react-redux'\nimport {addCartItem} from '../../redux/cart/cart.actions'\n\n/* Below codes, because we need item and item's element like name, price and imageUrl, so we have to pass the whole item\n    from upper component: collection-preview (item={item}); then we instead using \"()\" after \"=>\", but using \"{}\" ,\n    so that we can write return() function. Also, we need the item's elements, we can destructor the item;\n    Finally, we adding onClick = {()=> addCartItem(item)} to update the store by using redux:\n*/\nconst CollectionItem =({item, addCartItem }) => {\n    const {name, price, imageUrl} = item;\n    return (\n        <div className='collection-item'>\n            <div className='image'\n                 style={{\n                     backgroundImage: `url(${imageUrl})`\n                 }}\n            />\n            <div className='collection-footer'>\n                <span className='name'>{name}</span>\n                <span className='price'>{price}</span>\n            </div>\n            <CustomButton\n                onClick={()=> addCartItem(item) }\n                inverted> Add to cart </CustomButton>\n        </div>\n    )\n};\n\nconst mapDispatchToProps = dispatch => ({\n    addCartItem: item => dispatch(addCartItem(item))\n})\n\nexport default connect(null,mapDispatchToProps) (CollectionItem)\n"]},"metadata":{},"sourceType":"module"}