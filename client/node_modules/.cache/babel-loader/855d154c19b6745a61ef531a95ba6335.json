{"ast":null,"code":"var _jsxFileName = \"/Users/changrendu/Documents/Andrei_Web_Developer/E-commerce_project/Dylan/e-commerce-clothing/src/pages/shop/shop.component.jsx\";\nimport React, { Component } from \"react\";\nimport CollectionOverveiw from \"../../components/collection-overview/collection-overview.component\";\nimport { Route } from 'react-router-dom';\nimport CollectionPage from \"../collection/collection.component\";\nimport { convertCollectionsSnapshotToMap, firestore } from '../../firebase/firebase.utils';\nimport { connect } from 'react-redux';\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\n\nclass ShopPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap); // console.log(collectionsMap)\n\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionOverveiw,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: `${match.path}/:collectionId`,\n      component: CollectionPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/changrendu/Documents/Andrei_Web_Developer/E-commerce_project/Dylan/e-commerce-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Component","CollectionOverveiw","Route","CollectionPage","convertCollectionsSnapshotToMap","firestore","connect","updateCollections","ShopPage","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collectionsMap","setState","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,kBAAP,MAA+B,oEAA/B;AAEA,SAAQC,KAAR,QAAoB,kBAApB;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAAQC,+BAAR,EAAyCC,SAAzC,QAAyD,+BAAzD;AAEA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,iBAAR,QAAgC,+BAAhC;;AAEA,MAAMC,QAAN,SAAuBR,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAE7BS,KAF6B,GAErB;AACJC,MAAAA,OAAO,EAAE;AADL,KAFqB;AAAA,SAO7BC,uBAP6B,GAOH,IAPG;AAAA;;AAS7BC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAACL,MAAAA;AAAD,QAAsB,KAAKM,KAAjC;AACA,UAAMC,aAAa,GAAGT,SAAS,CAACU,UAAV,CAAqB,aAArB,CAAtB;AAEA,SAAKJ,uBAAL,GAA+BG,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACtE,YAAMC,cAAc,GAAGd,+BAA+B,CAACa,QAAD,CAAtD;AACAV,MAAAA,iBAAiB,CAACW,cAAD,CAAjB,CAFsE,CAGtE;;AACA,WAAKC,QAAL,CAAc;AAACT,QAAAA,OAAO,EAAE;AAAV,OAAd;AACH,KAL8B,CAA/B;AAMH;;AAEDU,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA;AAAD,QAAU,KAAKR,KAArB;AACA,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEQ,KAAK,CAACC,IAAK,EAAjC;AAAoC,MAAA,SAAS,EAAErB,kBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEoB,KAAK,CAACC,IAAK,gBAAjC;AAAkD,MAAA,SAAS,EAAEnB,cAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AA7B4B;;AAgCjC,MAAMoB,kBAAkB,GAAGC,QAAQ,KAAK;AACpCjB,EAAAA,iBAAiB,EAAEW,cAAc,IAAIM,QAAQ,CAACjB,iBAAiB,CAACW,cAAD,CAAlB;AADT,CAAL,CAAnC;;AAKA,eAAeZ,OAAO,CAAC,IAAD,EAAOiB,kBAAP,CAAP,CAAkCf,QAAlC,CAAf","sourcesContent":["import React, {Component} from \"react\";\nimport CollectionOverveiw from \"../../components/collection-overview/collection-overview.component\";\n\nimport {Route} from 'react-router-dom';\nimport CollectionPage from \"../collection/collection.component\";\nimport {convertCollectionsSnapshotToMap, firestore} from '../../firebase/firebase.utils';\n\nimport {connect} from 'react-redux'\nimport {updateCollections} from \"../../redux/shop/shop.actions\";\n\nclass ShopPage extends Component {\n\n    state = {\n        loading: true\n    };\n\n\n    unsubscribeFromSnapshot = null;\n\n    componentDidMount() {\n        const {updateCollections} = this.props\n        const collectionRef = firestore.collection('collections');\n\n        this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n            const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n            updateCollections(collectionsMap)\n            // console.log(collectionsMap)\n            this.setState({loading: false})\n        })\n    }\n\n    render() {\n        const {match} = this.props\n        return (\n            <div className='shop-page'>\n                <Route exact path={`${match.path}`} component={CollectionOverveiw}/>\n                <Route exact path={`${match.path}/:collectionId`} component={CollectionPage}/>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\n\nexport default connect(null, mapDispatchToProps)(ShopPage)\n"]},"metadata":{},"sourceType":"module"}